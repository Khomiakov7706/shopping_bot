
from aiogram import F, types, Router
from aiogram.filters import CommandStart, Command, or_f
from filters.chat_types import ChatTypeFilter
from aiogram.utils.formatting import as_list, as_marked_section, Bold


from input_keyboards import reply

user_private_router=Router()
user_private_router.message.filter(ChatTypeFilter(['private']))

@user_private_router.message(CommandStart())
async def start_cmd(message: types.Message):
    await message.answer('–ü—Ä–∏–≤–µ—Ç, —è –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫', 
                         reply_markup=reply.start_kb3.as_markup(
                             resize_keyboard = True,
                             input_field_placeholder='–ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?'
                         ))

@user_private_router.message(or_f(Command('menu'),(F.text.lower() == "–º–µ–Ω—é")))
async def echo(message: types.Message):
    #await message.answer(message.text)
    await message.reply("–í–æ—Ç –º–µ–Ω—é", reply_markup=reply.remove_keyboard)

@user_private_router.message(or_f(Command('about'),(F.text.lower() == "–æ –º–∞–≥–∞–∑–∏–Ω–µ")))
async def echo(message: types.Message):
    #await message.answer(message.text)
    await message.reply("–û –º–∞–≥–∞–∑–∏–Ω–µ", reply_markup=reply.remove_keyboard)

@user_private_router.message(or_f(Command('payment'),(F.text.lower() == "–≤–∞—Ä–∏–∞–Ω—Ç—ã –æ–ø–ª–∞—Ç—ã")))
async def echo(message: types.Message):
    #await message.answer(message.text)
    await message.reply("–í–∞—Ä–∏–∞–Ω—Ç—ã –æ–ø–ª–∞—Ç—ã", reply_markup=reply.remove_keyboard)

@user_private_router.message(or_f(Command('shipping'),(F.text.lower()=="–≤–∞—Ä–∏–∞–Ω—Ç—ã –¥–æ—Å—Ç–∞–≤–∫–∏")))
async def echo(message: types.Message):
    #await message.answer(message.text)
    await message.reply("–í–∞—Ä–∏–∞–Ω—Ç—ã –¥–æ—Å—Ç–∞–≤–∫–∏", reply_markup=reply.remove_keyboard)


#@user_private_router.message(F.text.lower().contains('–≤–∞—Ä–∏–∞–Ω—Ç—ã –¥–æ—Å—Ç–∞–≤–∫–∏'))
#async def echo(message: types.Message):
#    #await message.answer(message.text)
#    await message.reply(str("–≠—Ç–æ –º–∞–≥–∏—á–µ—Å–∫–∏–π —Ñ–∏–ª—å—Ç—Ä –¥–ª—è –ª—é–±–æ–≥–æ –≤—Ö–æ–∂–¥–µ–Ω–∏—è –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –¥–æ—Å—Ç–∞–≤–∫–∏, –≤ —Ç–æ–º —á–∏—Å–ª–µ " + message.text))


#–ü—Ä–æ–±—É–µ–º markdown
@user_private_router.message(F.text.lower()=='markdown')   
async def echo(message: types.Message):
    #await message.answer(message.text)
    await message.reply(str(f"*bold \*text* \n _italic \*text_ \n __underline__ \n ~strikethrough~ \n ||spoiler|| \n *bold _italic bold ~italic bold strikethrough ||italic bold strikethrough spoiler||~ __underline italic bold___ bold* \n [inline URL](http://www.example.com/) \n [inline mention of a user](tg://user?id={message.from_user.id}) \n  ![üëç](tg://emoji?id=5368324170671202286)"), 
                        reply_markup=reply.remove_keyboard)


#–ü—Ä–æ–±—É–µ–º –∫–ª–∞—Å—Å marked section
@user_private_router.message(F.text.lower()=='marked section')   
async def echo(message: types.Message):
    text = as_marked_section(
        Bold("–í–∞—Ä–∏–∞–Ω—Ç—ã –æ–ø–ª–∞—Ç—ã"),
        "–ö–∞—Ä—Ç–æ–π –≤ –±–æ—Ç–µ",
        "–ü—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–∞—Ä—Ç–∞/–∫–µ—à",
        "–í –∑–∞–≤–µ–¥–µ–Ω–∏–∏",
        marker='‚úÖ '
    )
    await message.answer(text.as_markdown())


@user_private_router.message(F.text)
async def echo(message: types.Message):
    #await message.answer(message.text)
    await message.answer(str("–≠—Ç–æ –º–∞–≥–∏—á–µ—Å–∫–∏–π —Ñ–∏–ª—å—Ç—Ä, " + message.text), reply_markup=reply.remove_keyboard)



